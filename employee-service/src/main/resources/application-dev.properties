# The rest of the configuration of this project has been migrated to: https://github.com/Yrol/demo-microservices-2-configs/blob/main/employee-service.properties

# This property cannot be migrated to config server (git location) since the Department service project used this name to load configs from the config server
# The name must match what's added in git. Ex: employee-service.properties
spring.application.name=EMPLOYEE-SERVICE


# RabbitMQ server properties - used for broadcasting config changes without restarting the microservice
# Starting the RabbitMQ via docker: docker run --rm -it -d -p 5672:5672 rabbitmq:3.11.0
# Broadcast new config changes - http://localhost:8081/actuator/busrefresh
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# importing configs from the config server
spring.config.import=optional:configserver:http://localhost:8888

# Enable 100% logging for distributed tracing for Micrometer and Zipkin
management.tracing.sampling.probability=1
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

# Actuator endpoints for circuit breaker
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# Circuit breaker configuration - https://resilience4j.readme.io/docs/circuitbreaker
# failureRateThreshold - whenever this threshold is reached, it'll be moved to open state.
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.failureRateThreshold=50
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.automaticTransition.FromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.slidingWindowSize=10
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.slidingWindowType=COUNT_BASED

# Retry configuration
resilience4j.retry.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
resilience4j.retry.instances.EMPLOYEE-SERVICE.maxRetryAttempts=5
resilience4j.retry.instances.EMPLOYEE-SERVICE.waitDuration=1s
