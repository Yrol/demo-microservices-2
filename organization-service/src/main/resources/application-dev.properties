spring.datasource.url=jdbc:postgresql://localhost:5432/organisation_db

spring.datasource.username=postgres
spring.datasource.password=admin

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate will create/update tables automatically based on Entities(Ex: Users, Permissions & etc)
spring.jpa.hibernate.ddl-auto=update

server.port=8083

# Enabling all the actuator related endpoints
management.endpoints.web.exposure.include=*
management.info.env.enabled=true

# Adding app info which can be accessed via http://localhost:8080/actuator/info
info.app.name=Employee Microservice
info.app.description="Spring Boot Organisation Microservice"
info.app.version="1.0.0"

# Defining the Eureka server location
eureka.instance.client.serverUrl.defaultZone=http://localhost:8761/eureka/


spring.application.name=ORGANISATION-SERVICE


# RabbitMQ server properties - used for broadcasting config changes without restarting the microservice
# Starting the RabbitMQ via docker: docker run --rm -it -d -p 5672:5672 rabbitmq:3.11.0
# Broadcast new config changes - http://localhost:8081/actuator/busrefresh
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# importing configs from the config server
#spring.config.import=optional:configserver:http://localhost:8888

# Enable 100% logging for distributed tracing for Micrometer and Zipkin
management.tracing.sampling.probability=1
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans


# Retry configuration
resilience4j.retry.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
resilience4j.retry.instances.EMPLOYEE-SERVICE.maxRetryAttempts=5
resilience4j.retry.instances.EMPLOYEE-SERVICE.waitDuration=1s
