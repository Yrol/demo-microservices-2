server.port=9191

# Defining the Eureka server location and Application name(App name to be used by the Eureka server)
spring.application.name=API-GATEWAY
eureka.instance.client.serverUrl.defaultZone=http://localhost:8761/eureka/
management.endpoints.web.exposure.include=*

############# Configuring Spring Cloud Gateway Automatically (discover routes automatically) #############
# Properties appendix: https://cloud.spring.io/spring-cloud-gateway/reference/html/appendix.html
# discovery.locator.enabled - will enable detecting the api endpoints / routes  autmatically
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
logging.level.org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping=DEBUG

############# Configuring Spring Cloud Gateway manually (define routes manually for each service) #############
### Route configuration for employee service
#spring.could.gateway.routes[0].id=EMPLOYEE-SERVICE
#
## URI with load balancing(lb) configured in Eureka server. If no lb is required, use http://localhost:8081
#spring.cloud.gateway.routes[0].uri=lb://EMPLOYEE-SERVICE
#
## path for employees API (can add multiple paths)
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/employees/**
#
#
#
### Route configuration for department service
#spring.could.gateway.routes[1].id=DEPARTMENT-SERVICE
#
## URI with load balancing(lb) configured in Eureka server. If no lb is required, use http://localhost:8081
#spring.cloud.gateway.routes[1].uri=lb://DEPARTMENT-SERVICE
#
## path for departments API (can add multiple paths)
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/departments/**